
package GUI;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import modelo.ComputadorVO;
import modelo.HistoricoComputadorVO;
import modelo.SecretariaVO;
import modelo.SetorVO;
import modelo.UsuarioVO;
import servicos.ComputadorServicos;
import servicos.HistoricoComputadorServicos;
import servicos.SecretariaServicos;
import servicos.ServicosFactory;
import servicos.SetorServicos;
import servicos.UsuarioServicos;
import utilidades.DataHora;
import utilidades.Tratamento;
import utilidades.Validacao;

/**
 * @author Maikel Maciel Rönnau
 * @version 1.0
 * @since 14/01/2015
 */
public class GUICadastroComputador extends javax.swing.JInternalFrame {

    /**
     * Creates new form GUICadastroComputador
     */
    public GUICadastroComputador() {
        initComponents();
        
        //Métodos para preencher os dados da interface:
        preencherSelecaoSecretaria();
        preencherSelecaoTecnico();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCadastrarComputador = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jlSecretaria = new javax.swing.JLabel();
        jcbSecretaria = new javax.swing.JComboBox();
        jlSetor = new javax.swing.JLabel();
        jcbSetor = new javax.swing.JComboBox();
        jlTecnico = new javax.swing.JLabel();
        jcbTecnico = new javax.swing.JComboBox();
        jlContato = new javax.swing.JLabel();
        jtContato = new javax.swing.JTextField();
        jlTelefone = new javax.swing.JLabel();
        jlMemorando = new javax.swing.JLabel();
        jlStatus = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox();
        jlDescricaoProblema = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaDescricaoProblema = new javax.swing.JTextArea();
        jbCadastrar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jftTelefone = new javax.swing.JFormattedTextField();
        jftMemorando = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de computadores");

        jlCadastrarComputador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlCadastrarComputador.setText("Cadastrar computador");

        jlNome.setText("* Nome:");

        jlSecretaria.setText("* Secretaria:");

        jcbSecretaria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
        jcbSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSecretariaActionPerformed(evt);
            }
        });

        jlSetor.setText("* Setor:");

        jcbSetor.setEnabled(false);

        jlTecnico.setText("* Técnico:");

        jlContato.setText("Contato:");

        jlTelefone.setText("Telefone:");

        jlMemorando.setText("Memorando:");

        jlStatus.setText("Status:");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aguardando manutenção", "Em manutenção" }));

        jlDescricaoProblema.setText("* Descrição/problema:");

        jtaDescricaoProblema.setColumns(20);
        jtaDescricaoProblema.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jtaDescricaoProblema.setLineWrap(true);
        jtaDescricaoProblema.setRows(5);
        jtaDescricaoProblema.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jtaDescricaoProblema);

        jbCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirmar.png"))); // NOI18N
        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });
        jbCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCadastrarKeyPressed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jbCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCancelarKeyPressed(evt);
            }
        });

        try {
            jftTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(51)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jftMemorando.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlDescricaoProblema)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jlSecretaria)
                                                    .addComponent(jlNome)
                                                    .addComponent(jlSetor))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jcbSetor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jcbSecretaria, 0, 200, Short.MAX_VALUE)
                                                    .addComponent(jtNome)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jlTecnico)
                                                .addGap(31, 31, 31)
                                                .addComponent(jcbTecnico, 0, 200, Short.MAX_VALUE)))
                                        .addGap(25, 25, 25)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlMemorando)
                                            .addComponent(jlStatus)
                                            .addComponent(jlContato)
                                            .addComponent(jlTelefone))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtContato, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jftMemorando, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jftTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jlCadastrarComputador)))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jbCadastrar)
                .addGap(18, 18, 18)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlCadastrarComputador)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlContato)
                    .addComponent(jtContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSecretaria)
                    .addComponent(jcbSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTelefone)
                    .addComponent(jftTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSetor)
                    .addComponent(jcbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlMemorando)
                    .addComponent(jftMemorando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTecnico)
                    .addComponent(jcbTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlStatus)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jlDescricaoProblema)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*** Métodos da classe ****************************************************/
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 15/01/2015
     */
    private void preencherSelecaoSecretaria(){
        
        try {
            
            //Instanciando objeto para acessar o método de busca:
            SecretariaServicos ss = ServicosFactory.getSecretariaServicos();
            
            //ArrayList para receber os dados da busca:
            ArrayList<SecretariaVO> secretaria;
            
            //Buscando secretarias:
            secretaria = ss.selecionarSecretarias();
            
            //Inserindo secretarias:
            secretaria.stream().forEach((secretaria1) -> {
                jcbSecretaria.addItem(secretaria1);
            });//Fim da adição das secretarias.       
        } catch (SQLException e) {
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Falha ao buscar secretarias!",
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            //Fim da mensagem de erro.
            
            //Fechando janela:
            cancelar();
        }//Fecha catch.
    }//Fecha métdodo preencherSelecaoSecretaria.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 15/01/2015
     */
    private void preencherSelecaoSetor(){
        
        try {
            
            //Verificando se o usuário selecionou uma opção:
            if(jcbSecretaria.getSelectedIndex() > 0){
                
                //Removendo intes da caixa de seleção:
                jcbSetor.removeAllItems();
                
                //Variável para receber a secretaria selecionada:
                SecretariaVO sec;
                
                //Recebendo a secretaria selecionada:
                sec = (SecretariaVO)jcbSecretaria.getSelectedItem();
                
                //Instanciando objeto para acessar o método de busca:
                SetorServicos ss = ServicosFactory.getSetorServicos();

                //ArrayList para receber os dados da busca:
                ArrayList<SetorVO> setor;

                //Buscando setores:
                setor = ss.filtrarSetor("sec.idsecretaria", " = " + sec.getIdSecretaria());
                
                 //Inserindo secretarias:
                setor.stream().forEach((setor1) -> {
                    jcbSetor.addItem(setor1);
                });//Fim da adição dos setores.
                
                //Ativando caixa de seleção:
                jcbSetor.setEnabled(true);
            } else {
                
                //Desativando caixa de seleção:
                jcbSetor.setEnabled(false);
                
                //Removendo intes da caixa de seleção:
                jcbSetor.removeAllItems();
            }//Fecha else.
        } catch (SQLException e) {
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Falha ao buscar setores!",
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            //Fim da mensagem de erro.
            
            //Fechando janela:
            cancelar();
        }//Fecha catch.
    }//Fecha método preencherSelecaoSetor.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 15/01/2015
     */
    private void preencherSelecaoTecnico(){
        
        try {
            
            //Criand objeto pdrão:
            UsuarioVO user = new UsuarioVO();
            
            //Inserindo dados:
            user.setIdUsuario(2);
            user.setNomeUsuario("Não selecionado");
            
            //Enviando para a caixa de seleção:
            jcbTecnico.addItem(user);
            
            //Instanciando objeto para acessar o método de busca:
            UsuarioServicos us = ServicosFactory.getUsuarioServicos();
            
            //ArrayList para receber os dados da busca:
            ArrayList<UsuarioVO> usuario;
            
            //Buscando técnicos:
            usuario = us.buscarTecnicos();
            
            //Inserindo técnicos;
            usuario.stream().forEach((usuario1) -> {
                jcbTecnico.addItem(usuario1);
            });//Fim da adição dos técnicos.
        } catch (SQLException e) {
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Falha ao buscar técnicos!",
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            //Fim da mensagem de erro.
            
            //Fechando janela:
            cancelar();
        }//Fecha catch.
    }//Fecha método preencherSelecaoTecnico.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 15/01/2015
     */
    private void cadastrar(){
        
        try {
            
            //Validando dados:
            Validacao.validarNomeComputador(jtNome.getText());
            Validacao.validarSigla(jcbSecretaria.getSelectedItem().toString());
            Validacao.validarNomeSiglaSetor(jcbSetor.getSelectedItem().toString());
            Validacao.validarNomeProprio(jcbTecnico.getSelectedItem().toString());
            Validacao.validarPesquisaNomeProprio(jtContato.getText());
            Validacao.validarDescricaoComputador(jtaDescricaoProblema.getText());
            //Fim da validação dos dados.
            
            /*** Cadastrando histórico ****************************************/
            
            //Instanciando objeto da classe HistoricoComputadorVO:
            HistoricoComputadorVO his = new HistoricoComputadorVO();
            
            //Instanciando objeto para acessar o método de insersão:
            HistoricoComputadorServicos hs = ServicosFactory.getHistoricoComputadorServicos();
            
            //Cadastrando histórico e recebendo o ID gerado:
            his.setIdHistoricoComputador(hs.cadastrarHistoricoComputador(his));          
            
            /*** Cadastrando computador ***************************************/
            
            //Instanciando objeto da classe ComputadorVO:
            ComputadorVO com = new ComputadorVO();
            
            //Adicionando informações de cadastro à descrição:
            jtaDescricaoProblema.setText(jtaDescricaoProblema.getText() 
                + "\n\nCadastro em: " + DataHora.capturarData() 
                + " - " + DataHora.capturarHora() + " - " + GUIMenu.loginUsuario 
                + "\n----------------------------------------------------------"
                + "------------------------------------------------------------"
                + "---\n\n");
            
            //Enviando dados para o objeto:
            com.setNomeComputador(jtNome.getText().toUpperCase());
            com.setStatusComputador(jcbStatus.getSelectedItem().toString());
            com.setMemorandoComputador(jftMemorando.getText());
            com.setContato(Tratamento.converterInicialDeCadaPalavraMaiucula(jtContato.getText().toLowerCase()));
            com.setTelefone(jftTelefone.getText());
            com.setDescricaoComputador(jtaDescricaoProblema.getText());
            com.setHistoricoComputador(his);
            com.setTecnico((UsuarioVO)jcbTecnico.getSelectedItem());
            com.setSecretaria((SecretariaVO)jcbSecretaria.getSelectedItem());
            com.setSetor((SetorVO)jcbSetor.getSelectedItem());
            
            //Instanciando objeto para acessar o método de insersão:
            ComputadorServicos cos = ServicosFactory.getComputadorServicos();            
            
            //Cadastrando computador:
            cos.cadastrarComputador(com);
            
            //Mensagem de confirmação:
            JOptionPane.showMessageDialog(
                this,
                "Computador cadastrado com sucesso!",
                "Cadastro concluído",
                JOptionPane.INFORMATION_MESSAGE);
            //Fim da mensagem de confirmação.
            
            //Fechando janela:
            cancelar();
        } catch (SQLException e) {
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Falha ao cadastrar computador!"
              + "\n\nNome do computador já cadastrado.",
                "Erro",
                JOptionPane.WARNING_MESSAGE);
            //Fim da mensagem de erro.
        } catch (Exception e){
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                e.getMessage(),
                "Erro",
                JOptionPane.WARNING_MESSAGE);
            //Fim da mensagem de erro.
        }//Fecha catch.        
    }//Fecha método cadastrar.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 06/01/2015
     */
    private void cancelar(){
        
        //Fechando a janela:
        dispose();
    }//Fecha método cancelar.
    
    /*** Fim dos métodos da classe ********************************************/
    
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed

        //Método cadastrar:
        cadastrar();
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCadastrarKeyPressed
        
        //Verificando se o usuário utilizou o teclado para selecionar a opção:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cadastrar();
        }//Fecha if.
    }//GEN-LAST:event_jbCadastrarKeyPressed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        
        //Método cancelar:
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCancelarKeyPressed
        
        //Verificando se o usuário utilizou o teclado para selecionar a opção:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cancelar();
        }//Fecha if.
    }//GEN-LAST:event_jbCancelarKeyPressed

    private void jcbSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSecretariaActionPerformed
        
        //Método preencherSelecaoSetor:
        preencherSelecaoSetor();
    }//GEN-LAST:event_jcbSecretariaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JComboBox jcbSecretaria;
    private javax.swing.JComboBox jcbSetor;
    private javax.swing.JComboBox jcbStatus;
    private javax.swing.JComboBox jcbTecnico;
    private javax.swing.JFormattedTextField jftMemorando;
    private javax.swing.JFormattedTextField jftTelefone;
    private javax.swing.JLabel jlCadastrarComputador;
    private javax.swing.JLabel jlContato;
    private javax.swing.JLabel jlDescricaoProblema;
    private javax.swing.JLabel jlMemorando;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlSecretaria;
    private javax.swing.JLabel jlSetor;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JLabel jlTecnico;
    private javax.swing.JLabel jlTelefone;
    private javax.swing.JTextField jtContato;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextArea jtaDescricaoProblema;
    // End of variables declaration//GEN-END:variables
}
