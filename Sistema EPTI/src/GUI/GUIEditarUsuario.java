
package GUI;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import modelo.PermissoesVO;
import modelo.UsuarioVO;
import servicos.PermissoesServicos;
import servicos.ServicosFactory;
import servicos.UsuarioServicos;
import utilidades.Criptografia;
import utilidades.Tratamento;
import utilidades.Validacao;

/**
 * @author Maikel Maciel Rönnau
 * @version 1.0
 * @since 11/01/2015
 */
public class GUIEditarUsuario extends javax.swing.JDialog {

    //Instanciando objeto da classe base:
    private final UsuarioVO user;
    private PermissoesVO per = new PermissoesVO();
    
    /**
     * Creates new form GUIEditarUsuario
     */
    public GUIEditarUsuario(java.awt.Frame parent, boolean modal, UsuarioVO user) {
        super(parent, modal);
        this.user = user;
        this.per = this.user.getPermissoes();
        initComponents();

        //Método para preencher os dados:
        enviarDados();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcConsultarUsuario = new javax.swing.JCheckBox();
        jcEditarUsuario = new javax.swing.JCheckBox();
        jlRepetir = new javax.swing.JLabel();
        jcExcluirUsuario = new javax.swing.JCheckBox();
        jpSenha = new javax.swing.JPasswordField();
        jbSalvar = new javax.swing.JButton();
        jpRepetir = new javax.swing.JPasswordField();
        jbCancelar = new javax.swing.JButton();
        jcEditarPermissoes = new javax.swing.JCheckBox();
        jSeparator = new javax.swing.JSeparator();
        jlPermissoesDoUsuario = new javax.swing.JLabel();
        jcCadastrarComputador = new javax.swing.JCheckBox();
        jcConsultarComputador = new javax.swing.JCheckBox();
        jcEditarComputador = new javax.swing.JCheckBox();
        jcExcluirComputador = new javax.swing.JCheckBox();
        jcCadastrarSecretaria = new javax.swing.JCheckBox();
        jcConsultarSecretaria = new javax.swing.JCheckBox();
        jcEditarSecretaria = new javax.swing.JCheckBox();
        jcExcluirSecretaria = new javax.swing.JCheckBox();
        jcCadastrarSetor = new javax.swing.JCheckBox();
        jlEditarUsuario = new javax.swing.JLabel();
        jcConsultarSetor = new javax.swing.JCheckBox();
        jlNome = new javax.swing.JLabel();
        jcEditarSetor = new javax.swing.JCheckBox();
        jtNome = new javax.swing.JTextField();
        jcExcluirSetor = new javax.swing.JCheckBox();
        jlLogin = new javax.swing.JLabel();
        jcCadastrarUsuario = new javax.swing.JCheckBox();
        jtLogin = new javax.swing.JTextField();
        jlSenha = new javax.swing.JLabel();
        jcDesativarUsuario = new javax.swing.JCheckBox();
        jcRealizarManutencao = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edição de usuários");
        setResizable(false);

        jcConsultarUsuario.setText("Consultar usuário");

        jcEditarUsuario.setText("Editar usuário");

        jlRepetir.setText("Repetir:");

        jcExcluirUsuario.setText("Excluir usuário");

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirmar.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });
        jbSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbSalvarKeyPressed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jbCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCancelarKeyPressed(evt);
            }
        });

        jcEditarPermissoes.setText("Editar permissões");

        jSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jlPermissoesDoUsuario.setText("Permissões do usuário");

        jcCadastrarComputador.setText("Cadastrar computador");

        jcConsultarComputador.setText("Consultar computador");

        jcEditarComputador.setText("Editar computador");

        jcExcluirComputador.setText("Excluir computador");

        jcCadastrarSecretaria.setText("Cadastrar secretaria");

        jcConsultarSecretaria.setText("Consultar secretaria");

        jcEditarSecretaria.setText("Editar secretaria");

        jcExcluirSecretaria.setText("Excluir secretaria");

        jcCadastrarSetor.setText("Cadastrar setor");

        jlEditarUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlEditarUsuario.setText("Editar usuário");

        jcConsultarSetor.setText("Consultar setor");

        jlNome.setText("Nome:");

        jcEditarSetor.setText("Editar setor");

        jcExcluirSetor.setText("Excluir setor");

        jlLogin.setText("Login:");

        jcCadastrarUsuario.setText("Cadastrar usuário");

        jlSenha.setText("Senha:");

        jcDesativarUsuario.setText("Desativar usuário");

        jcRealizarManutencao.setText("Realizar manutenção");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlEditarUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlRepetir)
                                .addGap(18, 18, 18)
                                .addComponent(jpRepetir, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbCancelar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jcEditarPermissoes)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcRealizarManutencao)
                                    .addGap(7, 7, 7)
                                    .addComponent(jcDesativarUsuario))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jlNome)
                                        .addComponent(jlLogin)
                                        .addComponent(jlSenha))
                                    .addGap(23, 23, 23)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jtLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                            .addComponent(jpSenha, javax.swing.GroupLayout.Alignment.LEADING))))))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlPermissoesDoUsuario)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcCadastrarComputador)
                            .addComponent(jcConsultarComputador)
                            .addComponent(jcEditarComputador)
                            .addComponent(jcExcluirComputador)
                            .addComponent(jcCadastrarSetor)
                            .addComponent(jcConsultarSetor)
                            .addComponent(jcEditarSetor)
                            .addComponent(jcExcluirSetor))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcCadastrarUsuario)
                            .addComponent(jcConsultarUsuario)
                            .addComponent(jcEditarUsuario)
                            .addComponent(jcExcluirUsuario)
                            .addComponent(jcConsultarSecretaria)
                            .addComponent(jcCadastrarSecretaria)
                            .addComponent(jcEditarSecretaria)
                            .addComponent(jcExcluirSecretaria))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlEditarUsuario)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNome)
                            .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlLogin)
                            .addComponent(jtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlSenha)
                            .addComponent(jpSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlRepetir)
                            .addComponent(jpRepetir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcEditarPermissoes)
                            .addComponent(jcDesativarUsuario)
                            .addComponent(jcRealizarManutencao))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbSalvar)
                            .addComponent(jbCancelar)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jlPermissoesDoUsuario)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jcCadastrarComputador)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcConsultarComputador)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcEditarComputador)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcExcluirComputador))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jcCadastrarSecretaria)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcConsultarSecretaria)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcEditarSecretaria)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcExcluirSecretaria)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jcCadastrarSetor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcConsultarSetor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcEditarSetor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcExcluirSetor))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jcCadastrarUsuario)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcConsultarUsuario)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcEditarUsuario)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcExcluirUsuario))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*** Métodos da classe ****************************************************/
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 14/01/2015
     */
    private void configurarPermissoes(){
        
        //Desativando caixas de seleção:
        jcCadastrarComputador.setEnabled(false);
        jcConsultarComputador.setEnabled(false);
        jcEditarComputador.setEnabled(false);
        jcExcluirComputador.setEnabled(false);
        jcCadastrarSecretaria.setEnabled(false);
        jcConsultarSecretaria.setEnabled(false);
        jcEditarSecretaria.setEnabled(false);
        jcExcluirSecretaria.setEnabled(false);
        jcCadastrarSetor.setEnabled(false);
        jcConsultarSetor.setEnabled(false);
        jcEditarSetor.setEnabled(false);
        jcExcluirSetor.setEnabled(false);
        jcCadastrarUsuario.setEnabled(false);
        jcConsultarUsuario.setEnabled(false);
        jcEditarUsuario.setEnabled(false);
        jcExcluirUsuario.setEnabled(false);
        jcEditarPermissoes.setEnabled(false);
        jcRealizarManutencao.setEnabled(false);
        jcDesativarUsuario.setEnabled(false);
    }//Fecha método configurarPermissoes.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 09/01/2015
     */
    private void enviarDados(){
        
        //Enviando dados para a interface:
        jtNome.setText(user.getNomeUsuario());
        jtLogin.setText(user.getLoginUsuario());
        
        if(user.getPermissoes().getCadastrarComputador() == 1){
            jcCadastrarComputador.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getConsultarComputador() == 1){
            jcConsultarComputador.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getEditarComputador() == 1){
            jcEditarComputador.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getExcluirComputador() == 1){
            jcExcluirComputador.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getCadastrarSecretaria() == 1){
            jcCadastrarSecretaria.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getConsultarSecretaria() == 1){
            jcConsultarSecretaria.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getEditarSecretaria() == 1){
            jcEditarSecretaria.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getExcluirSecretaria() == 1){
            jcExcluirSecretaria.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getCadastrarSetor() == 1){
            jcCadastrarSetor.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getConsultarSetor() == 1){
            jcConsultarSetor.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getEditarSetor() == 1){
            jcEditarSetor.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getExcluirSetor() == 1){
            jcExcluirSetor.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getCadastrarUsuario() == 1){
            jcCadastrarUsuario.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getConsultarUsuario() == 1){
            jcConsultarUsuario.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getEditarUsuario() == 1){
            jcEditarUsuario.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getExcluirUsuario() == 1){
            jcExcluirUsuario.setSelected(true);
        }//Fecha if.
        
        if(user.getPermissoes().getEditarPermissoes() == 1){
            jcEditarPermissoes.setSelected(true);
        } else {
            
            //Desativando caixas de seleção:
            configurarPermissoes();
        }//Fecha else.
        
        if(user.getPermissoes().getRealizarManutencao() == 1){
            jcRealizarManutencao.setSelected(true);
        }//Fecha if.
        
        if(user.getStatusUsuario() == 0){
            jcDesativarUsuario.setSelected(true);
        }//Fecha if.
    }//Fecha método enviarDados.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 11/01/2015
     */
    private void salvar(){
        
        try {
            
            //Recebendo dados da interface:
            Validacao.validarNomeProprio(jtNome.getText());
            Validacao.validarLogin(jtLogin.getText());
            
            //Recebendo a senha digitada:
            String senha = new String(jpSenha.getPassword());
            
            //Verificando se o usuário digitou uma nova senha:
            if(!senha.isEmpty()){
                
                //Validando senha:
                Validacao.validarSenha(new String(jpSenha.getPassword()), new String(jpRepetir.getPassword()));
                
                //Se for válida, envia a nova senha para o objeto:
                user.setSenhaUsuario(Criptografia.criptografarSenha(new String(jpSenha.getPassword())));
            }//Fecha if.
            
            /*** Verificando permissões do usuário ****************************/
            
            if(jcCadastrarComputador.isSelected()){
                per.setCadastrarComputador((byte)1);
            } else {
                per.setCadastrarComputador((byte)0);
            }//Fecha else.
                        
            if(jcConsultarComputador.isSelected()){
                per.setConsultarComputador((byte)1);
            } else {
                per.setConsultarComputador((byte)0);
            }//Fecha else.
            
            if(jcEditarComputador.isSelected()){
                per.setEditarComputador((byte)1);
            } else {
                per.setEditarComputador((byte)0);
            }//Fecha else.
            
            if(jcExcluirComputador.isSelected()){
                per.setExcluirComputador((byte)1);
            } else {
                per.setExcluirComputador((byte)0);
            }//Fecha else.
            
            if(jcCadastrarSecretaria.isSelected()){
                per.setCadastrarSecretaria((byte)1);
            } else {
                per.setCadastrarSecretaria((byte)0);
            }//Fecha else..
            
            if(jcConsultarSecretaria.isSelected()){
                per.setConsultarSecretaria((byte)1);
            } else {
                per.setConsultarSecretaria((byte)0);
            }//Fecha else.
            
            if(jcEditarSecretaria.isSelected()){
                per.setEditarSecretaria((byte)1);
            } else {
                per.setEditarSecretaria((byte)0);
            }//Fecha else.
            
            if(jcExcluirSecretaria.isSelected()){
                per.setExcluirSecretaria((byte)1);
            } else {
                per.setExcluirSecretaria((byte)0);
            }//Fecha else.
            
            if(jcCadastrarSetor.isSelected()){
                per.setCadastrarSetor((byte)1);
            } else {
                per.setCadastrarSetor((byte)0);
            }//Fecha else.
            
            if(jcConsultarSetor.isSelected()){
                per.setConsultarSetor((byte)1);
            } else {
                per.setConsultarSetor((byte)0);
            }//Fecha else.
            
            if(jcEditarSetor.isSelected()){
                per.setEditarSetor((byte)1);
            } else {
                per.setEditarSetor((byte)0);
            }//Fecha else.
            
            if(jcExcluirSetor.isSelected()){
                per.setExcluirSetor((byte)1);
            } else {
                per.setExcluirSetor((byte)0);
            }//Fecha else.
            
            if(jcCadastrarUsuario.isSelected()){
                per.setCadastrarUsuario((byte)1);
            } else {
                per.setCadastrarUsuario((byte)0);
            }//Fecha else.
            
            if(jcConsultarUsuario.isSelected()){
                per.setConsultarUsuario((byte)1);
            } else {
                per.setConsultarUsuario((byte)0);
            }//Fecha else.
            
            if(jcEditarUsuario.isSelected()){
                per.setEditarUsuario((byte)1);
            } else {
                per.setEditarUsuario((byte)0);
            }//Fecha else.
            
            if(jcExcluirUsuario.isSelected()){
                per.setExcluirUsuario((byte)1);
            } else {
                per.setExcluirUsuario((byte)0);
            }//Fecha else.
            
            if(jcEditarPermissoes.isSelected()){
                per.setEditarPermissoes((byte)1);
            } else {
                per.setEditarPermissoes((byte)0);
            }//Fecha else.
            
            if(jcRealizarManutencao.isSelected()){
                per.setRealizarManutencao((byte)1);
            } else {
                per.setRealizarManutencao((byte)0);
            }//Fecha else.
            
            if(jcDesativarUsuario.isSelected()){
                user.setStatusUsuario((byte)0);
            } else {
                user.setStatusUsuario((byte)1);
            }//Fecha else.
            
            //Enviando permissões para o usuário:
            user.setPermissoes(per);
            
            //Instanciando objeto para acessar o método de atualização:
            PermissoesServicos ps = ServicosFactory.getPermissoesServicos();
            
            //Atualizando permissões:
            ps.atualizarPermissoes(per);
            
            /*** Fim da verificação de permissões do usuário ******************/
            
            //Enviando informações para o objeto:
            user.setNomeUsuario(Tratamento.converterInicialDeCadaPalavraMaiucula(jtNome.getText()));
            user.setLoginUsuario(jtLogin.getText().toLowerCase());
            
            //Instanciando objeto para acessar o método de insersão:
            UsuarioServicos us = ServicosFactory.getUsuarioServicos();
            
            //Atualizando usuário:
            us.atualizarUsuario(user);
            
            //Mensagem de confirmação:
            JOptionPane.showMessageDialog(
                this,
                "Usuário atualizado com sucesso!",
                "Cadastro concluído",
                JOptionPane.INFORMATION_MESSAGE);
            //Fim da mensagem de confirmação.
            
            //Fechando janela:
            cancelar();
        } catch (SQLException e) {
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Falha ao atualizar usuário! "
              + "\n\nNome ou login já cadastrados.",
                "Erro",
                JOptionPane.WARNING_MESSAGE);
            //Fim da mensagem de erro.
        } catch (Exception e){
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                e.getMessage(),
                "Erro",
                JOptionPane.WARNING_MESSAGE);
            //Fim da mensagem de erro.
        }//Fecha catch. 
    }//Fecha método salvar.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 06/01/2015
     */
    private void cancelar(){
        
        //Fechando a janela:
        dispose();
    }//Fecha método cancelar
    
    /*** Fim dos métodos da classe ********************************************/
    
    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        
        //Método salvar:
        salvar();
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbSalvarKeyPressed
        
        //Verificando se o usuário utilizou o teclado para selecionar a opção:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            salvar();
        }//Fecha if.
    }//GEN-LAST:event_jbSalvarKeyPressed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        
        //Método cancelar:
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCancelarKeyPressed
        
        //Verificando se o usuário utilizou o teclado para selecionar a opção:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cancelar();
        }//Fecha if.
    }//GEN-LAST:event_jbCancelarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIEditarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUIEditarUsuario dialog = new GUIEditarUsuario(new javax.swing.JFrame(), true, new UsuarioVO());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JCheckBox jcCadastrarComputador;
    private javax.swing.JCheckBox jcCadastrarSecretaria;
    private javax.swing.JCheckBox jcCadastrarSetor;
    private javax.swing.JCheckBox jcCadastrarUsuario;
    private javax.swing.JCheckBox jcConsultarComputador;
    private javax.swing.JCheckBox jcConsultarSecretaria;
    private javax.swing.JCheckBox jcConsultarSetor;
    private javax.swing.JCheckBox jcConsultarUsuario;
    private javax.swing.JCheckBox jcDesativarUsuario;
    private javax.swing.JCheckBox jcEditarComputador;
    private javax.swing.JCheckBox jcEditarPermissoes;
    private javax.swing.JCheckBox jcEditarSecretaria;
    private javax.swing.JCheckBox jcEditarSetor;
    private javax.swing.JCheckBox jcEditarUsuario;
    private javax.swing.JCheckBox jcExcluirComputador;
    private javax.swing.JCheckBox jcExcluirSecretaria;
    private javax.swing.JCheckBox jcExcluirSetor;
    private javax.swing.JCheckBox jcExcluirUsuario;
    private javax.swing.JCheckBox jcRealizarManutencao;
    private javax.swing.JLabel jlEditarUsuario;
    private javax.swing.JLabel jlLogin;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlPermissoesDoUsuario;
    private javax.swing.JLabel jlRepetir;
    private javax.swing.JLabel jlSenha;
    private javax.swing.JPasswordField jpRepetir;
    private javax.swing.JPasswordField jpSenha;
    private javax.swing.JTextField jtLogin;
    private javax.swing.JTextField jtNome;
    // End of variables declaration//GEN-END:variables
}
