
package GUI;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import modelo.SecretariaVO;
import modelo.SetorVO;
import servicos.SecretariaServicos;
import servicos.ServicosFactory;
import servicos.SetorServicos;
import utilidades.Validacao;

/**
 * @author Maikel Maciel Rönnau
 * @version 1.0
 * @since 08/01/2015
 */
public class GUICadastroSetor extends javax.swing.JInternalFrame {

    /**
     * Creates new form GUICadastroSetor
     */
    public GUICadastroSetor() {
        initComponents();
        
        //Método para preencher a caixa de seleção da secretaria:
        preencherSelecaoSecretarias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCadastrarSetor = new javax.swing.JLabel();
        jlNomeSigla = new javax.swing.JLabel();
        jtNomeSigla = new javax.swing.JTextField();
        jlSecretaria = new javax.swing.JLabel();
        jcbSecretaria = new javax.swing.JComboBox();
        jbCadastrar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de setores");

        jlCadastrarSetor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlCadastrarSetor.setText("Cadastrar setor");

        jlNomeSigla.setText("Nome/sigla:");

        jlSecretaria.setText("Secretaria:");

        jcbSecretaria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

        jbCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirmar.png"))); // NOI18N
        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });
        jbCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCadastrarKeyPressed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jbCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCancelarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlCadastrarSetor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNomeSigla)
                            .addComponent(jlSecretaria))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNomeSigla, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbCadastrar)
                .addGap(18, 18, 18)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlCadastrarSetor)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNomeSigla)
                    .addComponent(jtNomeSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSecretaria)
                    .addComponent(jcbSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*** Métodos da classe ****************************************************/
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 08/01/2015
     */
    private void preencherSelecaoSecretarias(){
        
        try {
            
            //Instanciando objeto para acessar o método de busca:
            SecretariaServicos ss = ServicosFactory.getSecretariaServicos();
            
            //ArrayList para receber os dados da busca:
            ArrayList<SecretariaVO> secretaria;
            
            //Buscando secretarias:
            secretaria = ss.selecionarSecretarias();
            
            //Adicionando secretarias a caixa de seleção:
            secretaria.stream().forEach((secretaria1) -> {
                jcbSecretaria.addItem(secretaria1);
            });//Fim adição de secretarias à caixa de seleção.            
        } catch (SQLException e) {
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Falha ao buscar secretarias!",
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            //Fim da mensagem de erro.
        }//Fecha catch.
    }//Fecha método buscarSecretarias.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 06/01/2015
     */
    private void cadastrar(){
        
        //Verificando se o usuário selecionou uma opção:
        if(jcbSecretaria.getSelectedItem().equals("---")){
            
            //Mensagem de erro:
            JOptionPane.showMessageDialog(
                this,
                "Nenhuma secretaria selecionada!",
                "Selecione uma secretaria",
                JOptionPane.WARNING_MESSAGE);
            //Fim da mensagem de erro.
        } else {
                  
            try {

                //Recebendo dados da interface:
                Validacao.validarNomeSiglaSetor(jtNomeSigla.getText());
                //Fim da entrada de dados.

                //Instanciando objeto da classe:
                SetorVO set = new SetorVO();

                //Atribuindo dados ao objeto:            
                set.setNomeSetor(jtNomeSigla.getText().toUpperCase());
                set.setSecretaria((SecretariaVO)jcbSecretaria.getSelectedItem());

                //Instanciando objeto para acessar o método de insersão:
                SetorServicos ss = ServicosFactory.getSetorServicos();

                //Cadastrando setor:
                ss.cadastrarSetor(set);

                //Mensagem de confirmação:
                JOptionPane.showMessageDialog(
                    this,
                    "Setor cadastrado com sucesso!",
                    "Cadastro concluído",
                    JOptionPane.INFORMATION_MESSAGE);
                //Fim da mensagem de confirmação.

                //Fechando janela:
                cancelar();
            } catch (SQLException e) {

                //Mensagem de erro:
                JOptionPane.showMessageDialog(
                    this,
                    "Falha ao cadastrar setor! "
                  + "\n\nNome ou sigla já cadastrados.",
                    "Erro",
                    JOptionPane.WARNING_MESSAGE);
                //Fim da mensagem de erro.
            } catch (Exception e){

                //Mensagem de erro:
                JOptionPane.showMessageDialog(
                    this,
                    e.getMessage(),
                    "Erro",
                    JOptionPane.WARNING_MESSAGE);
                //Fim da mensagem de erro.
            }//Fecha catch.
        }//Fecha else.
    }//Fecha método cadastrar.
    
    /**
     * @author Maikel Maciel Rönnau
     * @version 1.0
     * @since 06/01/2015
     */
    private void cancelar(){
        
        //Fechando a janela:
        dispose();
    }//Fecha método cancelar.
    
    /*** Métodos da classe ****************************************************/
    
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        
        //Método cadastrar:
        cadastrar();
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCadastrarKeyPressed
        
        //Verificando se o usuário utilizou o teclado para selecionar a opção:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cadastrar();
        }//Fecha if.
    }//GEN-LAST:event_jbCadastrarKeyPressed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        
        //Método cancelar:
        cancelar();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCancelarKeyPressed
        
        //Verificando se o usuário utilizou o teclado para selecionar a opção:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cancelar();
        }//Fecha if.
    }//GEN-LAST:event_jbCancelarKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JComboBox jcbSecretaria;
    private javax.swing.JLabel jlCadastrarSetor;
    private javax.swing.JLabel jlNomeSigla;
    private javax.swing.JLabel jlSecretaria;
    private javax.swing.JTextField jtNomeSigla;
    // End of variables declaration//GEN-END:variables
}
